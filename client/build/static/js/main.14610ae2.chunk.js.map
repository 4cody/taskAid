{"version":3,"sources":["reducers/auth.js","reducers/tasks.js","reducers/index.js","actions/types.js","utils/setAuthToken.js","store.js","utils/api.js","components/layout/Landing.js","actions/auth.js","components/tasks/Task.js","components/tasks/TaskContainer.js","actions/tasks.js","components/tasks/AddTaskForm.js","components/layout/Dashboard.js","components/routing/ProtectedRoute.js","App.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","loading","user","tasks","combineReducers","auth","state","action","type","payload","map","task","_id","completed","setAuthToken","api","defaults","headers","common","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","data","msg","dispatch","Promise","reject","connect","login","email","password","a","body","post","console","log","register","formData","errors","useState","formIsToggled","formToggle","name","password2","setFormData","to","onChange","e","target","value","className","onClick","placeholder","required","preventDefault","Task","triggerTaskDone","title","createdAt","description","fetchTasks","config","Authorization","get","updateTask","taskID","patch","filterProp","useEffect","filter","t","key","todo","addTask","newTask","passToggler","onSubmit","cols","rows","toggleFilter","addTaskOverlayToggled","toggleOverlay","display","displayStyle","setDisplay","addTaskClassList","setAddTaskClassList","addTaskBtnClassList","setAddTaskBtnClassList","addTaskOverlaySwitch","todoFilter","completeFilter","id","style","Component","component","rest","render","props","App","exact","path","Landing","ProtectedRoute","Dashboard","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.14610ae2.chunk.js","sourcesContent":["import { LOGIN_SUCCESS, REGISTER_SUCCESS, LOGOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_TASKS, ADD_TASK, UPDATE_TASK } from '../actions/types';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: payload,\r\n      };\r\n\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [payload, ...state.tasks],\r\n      };\r\n\r\n    case UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task._id === payload._id ? { ...task, completed: true } : task\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport tasks from './tasks';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  tasks,\r\n});\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\n\r\nexport const SET_TASKS = 'SET_TASKS';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const ADD_TASK = 'ADD_TASK';\r\n","import api from './api';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { LOGOUT } from '../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response.data.msg === 'Token is not valid') {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login, register } from '../../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport '../../App.css';\r\n\r\nconst Landing = ({ isAuthenticated, login, register }) => {\r\n  const [formIsToggled, formToggle] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  const handleFormToggle = () => formToggle(!formIsToggled);\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    !formIsToggled ? login(email, password) : register(formData);\r\n  };\r\n\r\n  const provideForm = () =>\r\n    !formIsToggled ? (\r\n      <Fragment>\r\n        <input\r\n          type='text'\r\n          placeholder='Email'\r\n          name='email'\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Password'\r\n          name='password'\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </Fragment>\r\n    ) : (\r\n      <Fragment>\r\n        <input\r\n          type='text'\r\n          placeholder='Name'\r\n          name='name'\r\n          value={name}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Email'\r\n          name='email'\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          name='password'\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          name='password2'\r\n          value={password2}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </Fragment>\r\n    );\r\n\r\n  return (\r\n    <div className='landing'>\r\n      <div className='login-container'>\r\n        <div className='login-left'>\r\n          <button className='btn' onClick={handleFormToggle}>\r\n            {formIsToggled ? 'Login' : 'Sign Up'}\r\n          </button>\r\n        </div>\r\n        <div className='login-right'>\r\n          {provideForm()}\r\n          <button className='btn' onClick={onSubmit}>\r\n            {formIsToggled ? 'Sign up' : 'Login'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='divider'>\r\n        Task<span>Aid</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  login: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, register })(Landing);\r\n","import api from '../utils/api';\r\nimport { REGISTER_SUCCESS, LOGIN_SUCCESS, LOGOUT } from './types';\r\n\r\n// Register User\r\nexport const register = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/users', formData);\r\n\r\n    // localStorage.setItem('token', res.data.token)\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    // dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    console.log(errors);\r\n\r\n    // dispatch({\r\n    //   type: REGISTER_FAIL\r\n    // });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post('/users/login', body);\r\n\r\n    localStorage.setItem('token', res.token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    // dispatch(loadUser());\r\n  } catch (err) {\r\n    console.log(err);\r\n    // const errors = err.response.data.errors;\r\n\r\n    // console.log(errors);\r\n\r\n    //   dispatch({\r\n    //     type: LOGIN_FAIL,\r\n    //   });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => ({ type: LOGOUT });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../App.css';\r\n\r\nfunction Task({ task, triggerTaskDone }) {\r\n  return (\r\n    <div className='task'>\r\n      <div className='task-main'>\r\n        <h3 className='task-title'>{task.title}</h3>\r\n        <div className='task-date'>{task.createdAt}</div>\r\n      </div>\r\n\r\n      <div className='task-sub'>\r\n        <p className='task-desc'>{task.description}</p>\r\n        {task.completed === true ? null : (\r\n          <button onClick={triggerTaskDone}>Done</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTask.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  triggerTaskDone: PropTypes.func,\r\n};\r\n\r\nexport default Task;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Task from './Task';\r\nimport { fetchTasks, updateTask } from '../../actions/tasks';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskContainer({ fetchTasks, updateTask, tasks, filterProp }) {\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [fetchTasks]);\r\n\r\n  const completed = tasks\r\n    .filter((t) => t.completed === true)\r\n    .map((t) => <Task key={t._id} task={t} />);\r\n\r\n  const todo = tasks\r\n    .filter((t) => t.completed === false)\r\n    .map((t) => (\r\n      <Task\r\n        key={t._id}\r\n        task={t}\r\n        triggerTaskDone={() => {\r\n          updateTask(t._id);\r\n        }}\r\n      />\r\n    ));\r\n\r\n  return <Fragment>{filterProp ? todo : completed}</Fragment>;\r\n}\r\n\r\nTaskContainer.propTypes = {\r\n  updateTask: PropTypes.func.isRequired,\r\n  fetchTasks: PropTypes.func.isRequired,\r\n  tasks: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks.tasks,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchTasks, updateTask })(\r\n  TaskContainer\r\n);\r\n","import api from '../utils/api';\r\nimport { SET_TASKS, ADD_TASK, UPDATE_TASK } from '../actions/types';\r\n\r\nexport const fetchTasks = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const res = await api.get('/tasks', config);\r\n\r\n  dispatch({\r\n    type: SET_TASKS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const addTask = (newTask) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const body = newTask;\r\n\r\n  const res = await api.post('/tasks', body, config);\r\n\r\n  console.log(newTask);\r\n  console.log('in addtask action');\r\n\r\n  dispatch({\r\n    type: ADD_TASK,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const updateTask = (taskID) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const body = {\r\n    completed: true,\r\n  };\r\n\r\n  const res = await api.patch(`tasks/${taskID}`, body, config);\r\n\r\n  dispatch({\r\n    type: UPDATE_TASK,\r\n    payload: res.data,\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addTask } from '../../actions/tasks';\r\n\r\nfunction AddTaskForm({ addTask, passToggler }) {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  const { title, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const validateAddTask = () => {\r\n    if (formData.title && formData.description !== '') {\r\n      setFormData({\r\n        title: '',\r\n        description: '',\r\n      });\r\n      passToggler();\r\n      addTask(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className='add-task-form'\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        validateAddTask();\r\n      }}\r\n    >\r\n      <input\r\n        type='text'\r\n        placeholder='Title'\r\n        name='title'\r\n        value={title}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      <textarea\r\n        name='description'\r\n        cols='30'\r\n        rows='5'\r\n        placeholder='Description'\r\n        value={description}\r\n        onChange={onChange}\r\n      />\r\n      <input type='submit' />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddTaskForm.propTypes = {\r\n  addTask: PropTypes.func.isRequired,\r\n  passToggler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTask })(AddTaskForm);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TaskContainer from '../tasks/TaskContainer';\r\nimport AddTaskForm from '../tasks/AddTaskForm';\r\n\r\nfunction Dashboard({ user }) {\r\n  const [filter, toggleFilter] = useState(true);\r\n  const [addTaskOverlayToggled, toggleOverlay] = useState(false);\r\n  const [displayStyle, setDisplay] = useState({ display: 'none' });\r\n  const [addTaskClassList, setAddTaskClassList] = useState('add-task');\r\n  const [addTaskBtnClassList, setAddTaskBtnClassList] = useState(\r\n    'add-task-btn'\r\n  );\r\n\r\n  const addTaskOverlaySwitch = (e) => {\r\n    if (addTaskOverlayToggled) {\r\n      setDisplay({ display: 'none' });\r\n      setAddTaskBtnClassList('add-task-btn');\r\n      setAddTaskClassList('add-task');\r\n    } else {\r\n      setDisplay({ display: 'block' });\r\n      setAddTaskBtnClassList('add-task-btn active');\r\n      setAddTaskClassList('add-task active');\r\n    }\r\n\r\n    toggleOverlay(!addTaskOverlayToggled);\r\n  };\r\n\r\n  const todoFilter = (\r\n    <div className='task-filter'>\r\n      <p className={filter ? '' : 'inactive'}>Todo</p>\r\n      <p\r\n        className={filter ? 'inactive' : ''}\r\n        onClick={() => {\r\n          toggleFilter(!filter);\r\n        }}\r\n      >\r\n        Complete\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  const completeFilter = (\r\n    <div className='task-filter'>\r\n      <p\r\n        className={filter ? '' : 'inactive'}\r\n        onClick={() => {\r\n          toggleFilter(!filter);\r\n        }}\r\n      >\r\n        Todo\r\n      </p>\r\n      <p className={filter ? 'inactive' : ''}>Complete</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className='task-container'>\r\n      <div id='overlay' className='overlay' style={displayStyle}>\r\n        <AddTaskForm passToggler={addTaskOverlaySwitch} />\r\n      </div>\r\n      <div className='task-filter'>{filter ? todoFilter : completeFilter}</div>\r\n      <b className='grid-fill'>\r\n        <div className={addTaskClassList}>\r\n          <div className={addTaskBtnClassList} onClick={addTaskOverlaySwitch}>\r\n            <div className='plus-l'></div>\r\n            <div className='plus-r'></div>\r\n          </div>\r\n        </div>\r\n      </b>\r\n      <div className='greeting'>\r\n        <h2>\r\n          <span>Hi</span> {user.name}\r\n        </h2>\r\n      </div>\r\n\r\n      <div className='tasks'>\r\n        <TaskContainer filterProp={filter} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './components/layout/Landing';\nimport Dashboard from './components/layout/Dashboard';\nimport ProtectedRoute from './components/routing/ProtectedRoute';\nimport './App.css';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <ProtectedRoute\n              exact\n              path='/dashboard'\n              component={Dashboard}\n            />{' '}\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}